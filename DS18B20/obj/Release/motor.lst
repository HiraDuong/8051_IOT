                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.2.0 #13081 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module motor
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _LCD_GotoXY
                                     12 	.globl _LCD_Write_String
                                     13 	.globl _LCD_Write_One_Char
                                     14 	.globl _TF2
                                     15 	.globl _EXF2
                                     16 	.globl _RCLK
                                     17 	.globl _TCLK
                                     18 	.globl _EXEN2
                                     19 	.globl _TR2
                                     20 	.globl _C_T2
                                     21 	.globl _CP_RL2
                                     22 	.globl _T2CON_7
                                     23 	.globl _T2CON_6
                                     24 	.globl _T2CON_5
                                     25 	.globl _T2CON_4
                                     26 	.globl _T2CON_3
                                     27 	.globl _T2CON_2
                                     28 	.globl _T2CON_1
                                     29 	.globl _T2CON_0
                                     30 	.globl _PT2
                                     31 	.globl _ET2
                                     32 	.globl _CY
                                     33 	.globl _AC
                                     34 	.globl _F0
                                     35 	.globl _RS1
                                     36 	.globl _RS0
                                     37 	.globl _OV
                                     38 	.globl _F1
                                     39 	.globl _P
                                     40 	.globl _PS
                                     41 	.globl _PT1
                                     42 	.globl _PX1
                                     43 	.globl _PT0
                                     44 	.globl _PX0
                                     45 	.globl _RD
                                     46 	.globl _WR
                                     47 	.globl _T1
                                     48 	.globl _T0
                                     49 	.globl _INT1
                                     50 	.globl _INT0
                                     51 	.globl _TXD
                                     52 	.globl _RXD
                                     53 	.globl _P3_7
                                     54 	.globl _P3_6
                                     55 	.globl _P3_5
                                     56 	.globl _P3_4
                                     57 	.globl _P3_3
                                     58 	.globl _P3_2
                                     59 	.globl _P3_1
                                     60 	.globl _P3_0
                                     61 	.globl _EA
                                     62 	.globl _ES
                                     63 	.globl _ET1
                                     64 	.globl _EX1
                                     65 	.globl _ET0
                                     66 	.globl _EX0
                                     67 	.globl _P2_7
                                     68 	.globl _P2_6
                                     69 	.globl _P2_5
                                     70 	.globl _P2_4
                                     71 	.globl _P2_3
                                     72 	.globl _P2_2
                                     73 	.globl _P2_1
                                     74 	.globl _P2_0
                                     75 	.globl _SM0
                                     76 	.globl _SM1
                                     77 	.globl _SM2
                                     78 	.globl _REN
                                     79 	.globl _TB8
                                     80 	.globl _RB8
                                     81 	.globl _TI
                                     82 	.globl _RI
                                     83 	.globl _P1_7
                                     84 	.globl _P1_6
                                     85 	.globl _P1_5
                                     86 	.globl _P1_4
                                     87 	.globl _P1_3
                                     88 	.globl _P1_2
                                     89 	.globl _P1_1
                                     90 	.globl _P1_0
                                     91 	.globl _TF1
                                     92 	.globl _TR1
                                     93 	.globl _TF0
                                     94 	.globl _TR0
                                     95 	.globl _IE1
                                     96 	.globl _IT1
                                     97 	.globl _IE0
                                     98 	.globl _IT0
                                     99 	.globl _P0_7
                                    100 	.globl _P0_6
                                    101 	.globl _P0_5
                                    102 	.globl _P0_4
                                    103 	.globl _P0_3
                                    104 	.globl _P0_2
                                    105 	.globl _P0_1
                                    106 	.globl _P0_0
                                    107 	.globl _TH2
                                    108 	.globl _TL2
                                    109 	.globl _RCAP2H
                                    110 	.globl _RCAP2L
                                    111 	.globl _T2CON
                                    112 	.globl _B
                                    113 	.globl _ACC
                                    114 	.globl _PSW
                                    115 	.globl _IP
                                    116 	.globl _P3
                                    117 	.globl _IE
                                    118 	.globl _P2
                                    119 	.globl _SBUF
                                    120 	.globl _SCON
                                    121 	.globl _P1
                                    122 	.globl _TH1
                                    123 	.globl _TH0
                                    124 	.globl _TL1
                                    125 	.globl _TL0
                                    126 	.globl _TMOD
                                    127 	.globl _TCON
                                    128 	.globl _PCON
                                    129 	.globl _DPH
                                    130 	.globl _DPL
                                    131 	.globl _SP
                                    132 	.globl _P0
                                    133 	.globl _display_PARM_3
                                    134 	.globl _display_PARM_2
                                    135 	.globl _motor_power
                                    136 	.globl _count
                                    137 	.globl _Timer_Init
                                    138 	.globl _display
                                    139 ;--------------------------------------------------------
                                    140 ; special function registers
                                    141 ;--------------------------------------------------------
                                    142 	.area RSEG    (ABS,DATA)
      000000                        143 	.org 0x0000
                           000080   144 _P0	=	0x0080
                           000081   145 _SP	=	0x0081
                           000082   146 _DPL	=	0x0082
                           000083   147 _DPH	=	0x0083
                           000087   148 _PCON	=	0x0087
                           000088   149 _TCON	=	0x0088
                           000089   150 _TMOD	=	0x0089
                           00008A   151 _TL0	=	0x008a
                           00008B   152 _TL1	=	0x008b
                           00008C   153 _TH0	=	0x008c
                           00008D   154 _TH1	=	0x008d
                           000090   155 _P1	=	0x0090
                           000098   156 _SCON	=	0x0098
                           000099   157 _SBUF	=	0x0099
                           0000A0   158 _P2	=	0x00a0
                           0000A8   159 _IE	=	0x00a8
                           0000B0   160 _P3	=	0x00b0
                           0000B8   161 _IP	=	0x00b8
                           0000D0   162 _PSW	=	0x00d0
                           0000E0   163 _ACC	=	0x00e0
                           0000F0   164 _B	=	0x00f0
                           0000C8   165 _T2CON	=	0x00c8
                           0000CA   166 _RCAP2L	=	0x00ca
                           0000CB   167 _RCAP2H	=	0x00cb
                           0000CC   168 _TL2	=	0x00cc
                           0000CD   169 _TH2	=	0x00cd
                                    170 ;--------------------------------------------------------
                                    171 ; special function bits
                                    172 ;--------------------------------------------------------
                                    173 	.area RSEG    (ABS,DATA)
      000000                        174 	.org 0x0000
                           000080   175 _P0_0	=	0x0080
                           000081   176 _P0_1	=	0x0081
                           000082   177 _P0_2	=	0x0082
                           000083   178 _P0_3	=	0x0083
                           000084   179 _P0_4	=	0x0084
                           000085   180 _P0_5	=	0x0085
                           000086   181 _P0_6	=	0x0086
                           000087   182 _P0_7	=	0x0087
                           000088   183 _IT0	=	0x0088
                           000089   184 _IE0	=	0x0089
                           00008A   185 _IT1	=	0x008a
                           00008B   186 _IE1	=	0x008b
                           00008C   187 _TR0	=	0x008c
                           00008D   188 _TF0	=	0x008d
                           00008E   189 _TR1	=	0x008e
                           00008F   190 _TF1	=	0x008f
                           000090   191 _P1_0	=	0x0090
                           000091   192 _P1_1	=	0x0091
                           000092   193 _P1_2	=	0x0092
                           000093   194 _P1_3	=	0x0093
                           000094   195 _P1_4	=	0x0094
                           000095   196 _P1_5	=	0x0095
                           000096   197 _P1_6	=	0x0096
                           000097   198 _P1_7	=	0x0097
                           000098   199 _RI	=	0x0098
                           000099   200 _TI	=	0x0099
                           00009A   201 _RB8	=	0x009a
                           00009B   202 _TB8	=	0x009b
                           00009C   203 _REN	=	0x009c
                           00009D   204 _SM2	=	0x009d
                           00009E   205 _SM1	=	0x009e
                           00009F   206 _SM0	=	0x009f
                           0000A0   207 _P2_0	=	0x00a0
                           0000A1   208 _P2_1	=	0x00a1
                           0000A2   209 _P2_2	=	0x00a2
                           0000A3   210 _P2_3	=	0x00a3
                           0000A4   211 _P2_4	=	0x00a4
                           0000A5   212 _P2_5	=	0x00a5
                           0000A6   213 _P2_6	=	0x00a6
                           0000A7   214 _P2_7	=	0x00a7
                           0000A8   215 _EX0	=	0x00a8
                           0000A9   216 _ET0	=	0x00a9
                           0000AA   217 _EX1	=	0x00aa
                           0000AB   218 _ET1	=	0x00ab
                           0000AC   219 _ES	=	0x00ac
                           0000AF   220 _EA	=	0x00af
                           0000B0   221 _P3_0	=	0x00b0
                           0000B1   222 _P3_1	=	0x00b1
                           0000B2   223 _P3_2	=	0x00b2
                           0000B3   224 _P3_3	=	0x00b3
                           0000B4   225 _P3_4	=	0x00b4
                           0000B5   226 _P3_5	=	0x00b5
                           0000B6   227 _P3_6	=	0x00b6
                           0000B7   228 _P3_7	=	0x00b7
                           0000B0   229 _RXD	=	0x00b0
                           0000B1   230 _TXD	=	0x00b1
                           0000B2   231 _INT0	=	0x00b2
                           0000B3   232 _INT1	=	0x00b3
                           0000B4   233 _T0	=	0x00b4
                           0000B5   234 _T1	=	0x00b5
                           0000B6   235 _WR	=	0x00b6
                           0000B7   236 _RD	=	0x00b7
                           0000B8   237 _PX0	=	0x00b8
                           0000B9   238 _PT0	=	0x00b9
                           0000BA   239 _PX1	=	0x00ba
                           0000BB   240 _PT1	=	0x00bb
                           0000BC   241 _PS	=	0x00bc
                           0000D0   242 _P	=	0x00d0
                           0000D1   243 _F1	=	0x00d1
                           0000D2   244 _OV	=	0x00d2
                           0000D3   245 _RS0	=	0x00d3
                           0000D4   246 _RS1	=	0x00d4
                           0000D5   247 _F0	=	0x00d5
                           0000D6   248 _AC	=	0x00d6
                           0000D7   249 _CY	=	0x00d7
                           0000AD   250 _ET2	=	0x00ad
                           0000BD   251 _PT2	=	0x00bd
                           0000C8   252 _T2CON_0	=	0x00c8
                           0000C9   253 _T2CON_1	=	0x00c9
                           0000CA   254 _T2CON_2	=	0x00ca
                           0000CB   255 _T2CON_3	=	0x00cb
                           0000CC   256 _T2CON_4	=	0x00cc
                           0000CD   257 _T2CON_5	=	0x00cd
                           0000CE   258 _T2CON_6	=	0x00ce
                           0000CF   259 _T2CON_7	=	0x00cf
                           0000C8   260 _CP_RL2	=	0x00c8
                           0000C9   261 _C_T2	=	0x00c9
                           0000CA   262 _TR2	=	0x00ca
                           0000CB   263 _EXEN2	=	0x00cb
                           0000CC   264 _TCLK	=	0x00cc
                           0000CD   265 _RCLK	=	0x00cd
                           0000CE   266 _EXF2	=	0x00ce
                           0000CF   267 _TF2	=	0x00cf
                                    268 ;--------------------------------------------------------
                                    269 ; overlayable register banks
                                    270 ;--------------------------------------------------------
                                    271 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        272 	.ds 8
                                    273 ;--------------------------------------------------------
                                    274 ; internal ram data
                                    275 ;--------------------------------------------------------
                                    276 	.area DSEG    (DATA)
      000000                        277 _count::
      000000                        278 	.ds 1
      000001                        279 _motor_power::
      000001                        280 	.ds 2
      000003                        281 _display_PARM_2:
      000003                        282 	.ds 1
      000004                        283 _display_PARM_3:
      000004                        284 	.ds 1
                                    285 ;--------------------------------------------------------
                                    286 ; overlayable items in internal ram
                                    287 ;--------------------------------------------------------
                                    288 ;--------------------------------------------------------
                                    289 ; indirectly addressable internal ram data
                                    290 ;--------------------------------------------------------
                                    291 	.area ISEG    (DATA)
                                    292 ;--------------------------------------------------------
                                    293 ; absolute internal ram data
                                    294 ;--------------------------------------------------------
                                    295 	.area IABS    (ABS,DATA)
                                    296 	.area IABS    (ABS,DATA)
                                    297 ;--------------------------------------------------------
                                    298 ; bit data
                                    299 ;--------------------------------------------------------
                                    300 	.area BSEG    (BIT)
                                    301 ;--------------------------------------------------------
                                    302 ; paged external ram data
                                    303 ;--------------------------------------------------------
                                    304 	.area PSEG    (PAG,XDATA)
                                    305 ;--------------------------------------------------------
                                    306 ; external ram data
                                    307 ;--------------------------------------------------------
                                    308 	.area XSEG    (XDATA)
                                    309 ;--------------------------------------------------------
                                    310 ; absolute external ram data
                                    311 ;--------------------------------------------------------
                                    312 	.area XABS    (ABS,XDATA)
                                    313 ;--------------------------------------------------------
                                    314 ; external initialized ram data
                                    315 ;--------------------------------------------------------
                                    316 	.area XISEG   (XDATA)
                                    317 	.area HOME    (CODE)
                                    318 	.area GSINIT0 (CODE)
                                    319 	.area GSINIT1 (CODE)
                                    320 	.area GSINIT2 (CODE)
                                    321 	.area GSINIT3 (CODE)
                                    322 	.area GSINIT4 (CODE)
                                    323 	.area GSINIT5 (CODE)
                                    324 	.area GSINIT  (CODE)
                                    325 	.area GSFINAL (CODE)
                                    326 	.area CSEG    (CODE)
                                    327 ;--------------------------------------------------------
                                    328 ; global & static initialisations
                                    329 ;--------------------------------------------------------
                                    330 	.area HOME    (CODE)
                                    331 	.area GSINIT  (CODE)
                                    332 	.area GSFINAL (CODE)
                                    333 	.area GSINIT  (CODE)
                                    334 ;--------------------------------------------------------
                                    335 ; Home
                                    336 ;--------------------------------------------------------
                                    337 	.area HOME    (CODE)
                                    338 	.area HOME    (CODE)
                                    339 ;--------------------------------------------------------
                                    340 ; code
                                    341 ;--------------------------------------------------------
                                    342 	.area CSEG    (CODE)
                                    343 ;------------------------------------------------------------
                                    344 ;Allocation info for local variables in function 'Timer_Init'
                                    345 ;------------------------------------------------------------
                                    346 ;	motor.c:15: void Timer_Init()
                                    347 ;	-----------------------------------------
                                    348 ;	 function Timer_Init
                                    349 ;	-----------------------------------------
      000000                        350 _Timer_Init:
                           000007   351 	ar7 = 0x07
                           000006   352 	ar6 = 0x06
                           000005   353 	ar5 = 0x05
                           000004   354 	ar4 = 0x04
                           000003   355 	ar3 = 0x03
                           000002   356 	ar2 = 0x02
                           000001   357 	ar1 = 0x01
                           000000   358 	ar0 = 0x00
                                    359 ;	motor.c:17: TMOD = 0x01;    //timer 0 mode 1
      000000 75 89 01         [24]  360 	mov	_TMOD,#0x01
                                    361 ;	motor.c:18: TH0 = TH0_5ms;
      000003 75 8C EE         [24]  362 	mov	_TH0,#0xee
                                    363 ;	motor.c:19: TL0 = TL0_5ms;
      000006 75 8A 00         [24]  364 	mov	_TL0,#0x00
                                    365 ;	motor.c:23: IE  = 0b10000010;
      000009 75 A8 82         [24]  366 	mov	_IE,#0x82
                                    367 ;	motor.c:24: TF0 = 0;
                                    368 ;	assignBit
      00000C C2 8D            [12]  369 	clr	_TF0
                                    370 ;	motor.c:25: TR0 = 1;    //start timer
                                    371 ;	assignBit
      00000E D2 8C            [12]  372 	setb	_TR0
                                    373 ;	motor.c:26: count = 0;
                                    374 ;	motor.c:27: motor_power = 0;
      000010 E4               [12]  375 	clr	a
      000011 F5*00            [12]  376 	mov	_count,a
      000013 F5*01            [12]  377 	mov	_motor_power,a
      000015 F5*02            [12]  378 	mov	(_motor_power + 1),a
                                    379 ;	motor.c:28: }
      000017 22               [24]  380 	ret
                                    381 ;------------------------------------------------------------
                                    382 ;Allocation info for local variables in function 'display'
                                    383 ;------------------------------------------------------------
                                    384 ;max                       Allocated with name '_display_PARM_2'
                                    385 ;min                       Allocated with name '_display_PARM_3'
                                    386 ;cur                       Allocated to registers r7 
                                    387 ;------------------------------------------------------------
                                    388 ;	motor.c:32: void display(unsigned char cur, unsigned char max, unsigned char min)
                                    389 ;	-----------------------------------------
                                    390 ;	 function display
                                    391 ;	-----------------------------------------
      000018                        392 _display:
      000018 AF 82            [24]  393 	mov	r7,dpl
                                    394 ;	motor.c:34: LCD_GotoXY(1,0);
      00001A 75*00 00         [24]  395 	mov	_LCD_GotoXY_PARM_2,#0x00
      00001D 75 82 01         [24]  396 	mov	dpl,#0x01
      000020 C0 07            [24]  397 	push	ar7
      000022 12r00r00         [24]  398 	lcall	_LCD_GotoXY
                                    399 ;	motor.c:35: LCD_Write_String("Current: ");
      000025 90r00r00         [24]  400 	mov	dptr,#___str_0
      000028 75 F0 80         [24]  401 	mov	b,#0x80
      00002B 12r00r00         [24]  402 	lcall	_LCD_Write_String
      00002E D0 07            [24]  403 	pop	ar7
                                    404 ;	motor.c:36: LCD_Write_One_Char(cur/10+0x30);
      000030 7E 00            [12]  405 	mov	r6,#0x00
      000032 75*00 0A         [24]  406 	mov	__divsint_PARM_2,#0x0a
                                    407 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      000035 8E*01            [24]  408 	mov	(__divsint_PARM_2 + 1),r6
      000037 8F 82            [24]  409 	mov	dpl,r7
      000039 8E 83            [24]  410 	mov	dph,r6
      00003B C0 07            [24]  411 	push	ar7
      00003D C0 06            [24]  412 	push	ar6
      00003F 12r00r00         [24]  413 	lcall	__divsint
      000042 AC 82            [24]  414 	mov	r4,dpl
      000044 74 30            [12]  415 	mov	a,#0x30
      000046 2C               [12]  416 	add	a,r4
      000047 F5 82            [12]  417 	mov	dpl,a
      000049 12r00r00         [24]  418 	lcall	_LCD_Write_One_Char
      00004C D0 06            [24]  419 	pop	ar6
      00004E D0 07            [24]  420 	pop	ar7
                                    421 ;	motor.c:37: LCD_Write_One_Char(cur%10+0x30);
      000050 75*00 0A         [24]  422 	mov	__modsint_PARM_2,#0x0a
      000053 75*01 00         [24]  423 	mov	(__modsint_PARM_2 + 1),#0x00
      000056 8F 82            [24]  424 	mov	dpl,r7
      000058 8E 83            [24]  425 	mov	dph,r6
      00005A 12r00r00         [24]  426 	lcall	__modsint
      00005D AE 82            [24]  427 	mov	r6,dpl
      00005F 74 30            [12]  428 	mov	a,#0x30
      000061 2E               [12]  429 	add	a,r6
      000062 F5 82            [12]  430 	mov	dpl,a
      000064 12r00r00         [24]  431 	lcall	_LCD_Write_One_Char
                                    432 ;	motor.c:38: LCD_Write_One_Char(223);            //degree character on LCD
      000067 75 82 DF         [24]  433 	mov	dpl,#0xdf
      00006A 12r00r00         [24]  434 	lcall	_LCD_Write_One_Char
                                    435 ;	motor.c:39: LCD_Write_One_Char('C');
      00006D 75 82 43         [24]  436 	mov	dpl,#0x43
      000070 12r00r00         [24]  437 	lcall	_LCD_Write_One_Char
                                    438 ;	motor.c:43: LCD_GotoXY(2,0);
      000073 75*00 00         [24]  439 	mov	_LCD_GotoXY_PARM_2,#0x00
      000076 75 82 02         [24]  440 	mov	dpl,#0x02
      000079 12r00r00         [24]  441 	lcall	_LCD_GotoXY
                                    442 ;	motor.c:44: LCD_Write_String("Max:");
      00007C 90r00r0A         [24]  443 	mov	dptr,#___str_1
      00007F 75 F0 80         [24]  444 	mov	b,#0x80
      000082 12r00r00         [24]  445 	lcall	_LCD_Write_String
                                    446 ;	motor.c:45: LCD_Write_One_Char(max/10+0x30);
      000085 AE*03            [24]  447 	mov	r6,_display_PARM_2
      000087 7F 00            [12]  448 	mov	r7,#0x00
      000089 75*00 0A         [24]  449 	mov	__divsint_PARM_2,#0x0a
                                    450 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      00008C 8F*01            [24]  451 	mov	(__divsint_PARM_2 + 1),r7
      00008E 8E 82            [24]  452 	mov	dpl,r6
      000090 8F 83            [24]  453 	mov	dph,r7
      000092 C0 07            [24]  454 	push	ar7
      000094 C0 06            [24]  455 	push	ar6
      000096 12r00r00         [24]  456 	lcall	__divsint
      000099 AC 82            [24]  457 	mov	r4,dpl
      00009B 74 30            [12]  458 	mov	a,#0x30
      00009D 2C               [12]  459 	add	a,r4
      00009E F5 82            [12]  460 	mov	dpl,a
      0000A0 12r00r00         [24]  461 	lcall	_LCD_Write_One_Char
      0000A3 D0 06            [24]  462 	pop	ar6
      0000A5 D0 07            [24]  463 	pop	ar7
                                    464 ;	motor.c:46: LCD_Write_One_Char(max%10+0x30);
      0000A7 75*00 0A         [24]  465 	mov	__modsint_PARM_2,#0x0a
      0000AA 75*01 00         [24]  466 	mov	(__modsint_PARM_2 + 1),#0x00
      0000AD 8E 82            [24]  467 	mov	dpl,r6
      0000AF 8F 83            [24]  468 	mov	dph,r7
      0000B1 12r00r00         [24]  469 	lcall	__modsint
      0000B4 AE 82            [24]  470 	mov	r6,dpl
      0000B6 74 30            [12]  471 	mov	a,#0x30
      0000B8 2E               [12]  472 	add	a,r6
      0000B9 F5 82            [12]  473 	mov	dpl,a
      0000BB 12r00r00         [24]  474 	lcall	_LCD_Write_One_Char
                                    475 ;	motor.c:47: LCD_Write_One_Char(223);            //degree character on LCD
      0000BE 75 82 DF         [24]  476 	mov	dpl,#0xdf
      0000C1 12r00r00         [24]  477 	lcall	_LCD_Write_One_Char
                                    478 ;	motor.c:48: LCD_Write_String("C Min:");
      0000C4 90r00r0F         [24]  479 	mov	dptr,#___str_2
      0000C7 75 F0 80         [24]  480 	mov	b,#0x80
      0000CA 12r00r00         [24]  481 	lcall	_LCD_Write_String
                                    482 ;	motor.c:49: LCD_Write_One_Char(min/10+0x30);
      0000CD AE*04            [24]  483 	mov	r6,_display_PARM_3
      0000CF 7F 00            [12]  484 	mov	r7,#0x00
      0000D1 75*00 0A         [24]  485 	mov	__divsint_PARM_2,#0x0a
                                    486 ;	1-genFromRTrack replaced	mov	(__divsint_PARM_2 + 1),#0x00
      0000D4 8F*01            [24]  487 	mov	(__divsint_PARM_2 + 1),r7
      0000D6 8E 82            [24]  488 	mov	dpl,r6
      0000D8 8F 83            [24]  489 	mov	dph,r7
      0000DA C0 07            [24]  490 	push	ar7
      0000DC C0 06            [24]  491 	push	ar6
      0000DE 12r00r00         [24]  492 	lcall	__divsint
      0000E1 AC 82            [24]  493 	mov	r4,dpl
      0000E3 74 30            [12]  494 	mov	a,#0x30
      0000E5 2C               [12]  495 	add	a,r4
      0000E6 F5 82            [12]  496 	mov	dpl,a
      0000E8 12r00r00         [24]  497 	lcall	_LCD_Write_One_Char
      0000EB D0 06            [24]  498 	pop	ar6
      0000ED D0 07            [24]  499 	pop	ar7
                                    500 ;	motor.c:50: LCD_Write_One_Char(min%10+0x30);
      0000EF 75*00 0A         [24]  501 	mov	__modsint_PARM_2,#0x0a
      0000F2 75*01 00         [24]  502 	mov	(__modsint_PARM_2 + 1),#0x00
      0000F5 8E 82            [24]  503 	mov	dpl,r6
      0000F7 8F 83            [24]  504 	mov	dph,r7
      0000F9 12r00r00         [24]  505 	lcall	__modsint
      0000FC AE 82            [24]  506 	mov	r6,dpl
      0000FE 74 30            [12]  507 	mov	a,#0x30
      000100 2E               [12]  508 	add	a,r6
      000101 F5 82            [12]  509 	mov	dpl,a
      000103 12r00r00         [24]  510 	lcall	_LCD_Write_One_Char
                                    511 ;	motor.c:51: LCD_Write_One_Char(223);            //degree character on LCD
      000106 75 82 DF         [24]  512 	mov	dpl,#0xdf
      000109 12r00r00         [24]  513 	lcall	_LCD_Write_One_Char
                                    514 ;	motor.c:52: LCD_Write_String("C");
      00010C 90r00r16         [24]  515 	mov	dptr,#___str_3
      00010F 75 F0 80         [24]  516 	mov	b,#0x80
                                    517 ;	motor.c:53: }
      000112 02r00r00         [24]  518 	ljmp	_LCD_Write_String
                                    519 	.area CSEG    (CODE)
                                    520 	.area CONST   (CODE)
                                    521 	.area CONST   (CODE)
      000000                        522 ___str_0:
      000000 43 75 72 72 65 6E 74   523 	.ascii "Current: "
             3A 20
      000009 00                     524 	.db 0x00
                                    525 	.area CSEG    (CODE)
                                    526 	.area CONST   (CODE)
      00000A                        527 ___str_1:
      00000A 4D 61 78 3A            528 	.ascii "Max:"
      00000E 00                     529 	.db 0x00
                                    530 	.area CSEG    (CODE)
                                    531 	.area CONST   (CODE)
      00000F                        532 ___str_2:
      00000F 43 20 4D 69 6E 3A      533 	.ascii "C Min:"
      000015 00                     534 	.db 0x00
                                    535 	.area CSEG    (CODE)
                                    536 	.area CONST   (CODE)
      000016                        537 ___str_3:
      000016 43                     538 	.ascii "C"
      000017 00                     539 	.db 0x00
                                    540 	.area CSEG    (CODE)
                                    541 	.area XINIT   (CODE)
                                    542 	.area CABS    (ABS,CODE)
