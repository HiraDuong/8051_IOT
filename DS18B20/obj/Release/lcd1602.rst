                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.2.0 #13081 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module lcd1602
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _strlen
                                     12 	.globl _TF2
                                     13 	.globl _EXF2
                                     14 	.globl _RCLK
                                     15 	.globl _TCLK
                                     16 	.globl _EXEN2
                                     17 	.globl _TR2
                                     18 	.globl _C_T2
                                     19 	.globl _CP_RL2
                                     20 	.globl _T2CON_7
                                     21 	.globl _T2CON_6
                                     22 	.globl _T2CON_5
                                     23 	.globl _T2CON_4
                                     24 	.globl _T2CON_3
                                     25 	.globl _T2CON_2
                                     26 	.globl _T2CON_1
                                     27 	.globl _T2CON_0
                                     28 	.globl _PT2
                                     29 	.globl _ET2
                                     30 	.globl _CY
                                     31 	.globl _AC
                                     32 	.globl _F0
                                     33 	.globl _RS1
                                     34 	.globl _RS0
                                     35 	.globl _OV
                                     36 	.globl _F1
                                     37 	.globl _P
                                     38 	.globl _PS
                                     39 	.globl _PT1
                                     40 	.globl _PX1
                                     41 	.globl _PT0
                                     42 	.globl _PX0
                                     43 	.globl _RD
                                     44 	.globl _WR
                                     45 	.globl _T1
                                     46 	.globl _T0
                                     47 	.globl _INT1
                                     48 	.globl _INT0
                                     49 	.globl _TXD
                                     50 	.globl _RXD
                                     51 	.globl _P3_7
                                     52 	.globl _P3_6
                                     53 	.globl _P3_5
                                     54 	.globl _P3_4
                                     55 	.globl _P3_3
                                     56 	.globl _P3_2
                                     57 	.globl _P3_1
                                     58 	.globl _P3_0
                                     59 	.globl _EA
                                     60 	.globl _ES
                                     61 	.globl _ET1
                                     62 	.globl _EX1
                                     63 	.globl _ET0
                                     64 	.globl _EX0
                                     65 	.globl _P2_7
                                     66 	.globl _P2_6
                                     67 	.globl _P2_5
                                     68 	.globl _P2_4
                                     69 	.globl _P2_3
                                     70 	.globl _P2_2
                                     71 	.globl _P2_1
                                     72 	.globl _P2_0
                                     73 	.globl _SM0
                                     74 	.globl _SM1
                                     75 	.globl _SM2
                                     76 	.globl _REN
                                     77 	.globl _TB8
                                     78 	.globl _RB8
                                     79 	.globl _TI
                                     80 	.globl _RI
                                     81 	.globl _P1_7
                                     82 	.globl _P1_6
                                     83 	.globl _P1_5
                                     84 	.globl _P1_4
                                     85 	.globl _P1_3
                                     86 	.globl _P1_2
                                     87 	.globl _P1_1
                                     88 	.globl _P1_0
                                     89 	.globl _TF1
                                     90 	.globl _TR1
                                     91 	.globl _TF0
                                     92 	.globl _TR0
                                     93 	.globl _IE1
                                     94 	.globl _IT1
                                     95 	.globl _IE0
                                     96 	.globl _IT0
                                     97 	.globl _P0_7
                                     98 	.globl _P0_6
                                     99 	.globl _P0_5
                                    100 	.globl _P0_4
                                    101 	.globl _P0_3
                                    102 	.globl _P0_2
                                    103 	.globl _P0_1
                                    104 	.globl _P0_0
                                    105 	.globl _TH2
                                    106 	.globl _TL2
                                    107 	.globl _RCAP2H
                                    108 	.globl _RCAP2L
                                    109 	.globl _T2CON
                                    110 	.globl _B
                                    111 	.globl _ACC
                                    112 	.globl _PSW
                                    113 	.globl _IP
                                    114 	.globl _P3
                                    115 	.globl _IE
                                    116 	.globl _P2
                                    117 	.globl _SBUF
                                    118 	.globl _SCON
                                    119 	.globl _P1
                                    120 	.globl _TH1
                                    121 	.globl _TH0
                                    122 	.globl _TL1
                                    123 	.globl _TL0
                                    124 	.globl _TMOD
                                    125 	.globl _TCON
                                    126 	.globl _PCON
                                    127 	.globl _DPH
                                    128 	.globl _DPL
                                    129 	.globl _SP
                                    130 	.globl _P0
                                    131 	.globl _LCD_GotoXY_PARM_2
                                    132 	.globl _LCD_Send_Command
                                    133 	.globl _Wait_For_LCD
                                    134 	.globl _LCD_init
                                    135 	.globl _LCD_Write_One_Char
                                    136 	.globl _LCD_Write_String
                                    137 	.globl _LCD_GotoXY
                                    138 	.globl _Delay_ms
                                    139 	.globl _Delay_us
                                    140 ;--------------------------------------------------------
                                    141 ; special function registers
                                    142 ;--------------------------------------------------------
                                    143 	.area RSEG    (ABS,DATA)
      000000                        144 	.org 0x0000
                           000080   145 _P0	=	0x0080
                           000081   146 _SP	=	0x0081
                           000082   147 _DPL	=	0x0082
                           000083   148 _DPH	=	0x0083
                           000087   149 _PCON	=	0x0087
                           000088   150 _TCON	=	0x0088
                           000089   151 _TMOD	=	0x0089
                           00008A   152 _TL0	=	0x008a
                           00008B   153 _TL1	=	0x008b
                           00008C   154 _TH0	=	0x008c
                           00008D   155 _TH1	=	0x008d
                           000090   156 _P1	=	0x0090
                           000098   157 _SCON	=	0x0098
                           000099   158 _SBUF	=	0x0099
                           0000A0   159 _P2	=	0x00a0
                           0000A8   160 _IE	=	0x00a8
                           0000B0   161 _P3	=	0x00b0
                           0000B8   162 _IP	=	0x00b8
                           0000D0   163 _PSW	=	0x00d0
                           0000E0   164 _ACC	=	0x00e0
                           0000F0   165 _B	=	0x00f0
                           0000C8   166 _T2CON	=	0x00c8
                           0000CA   167 _RCAP2L	=	0x00ca
                           0000CB   168 _RCAP2H	=	0x00cb
                           0000CC   169 _TL2	=	0x00cc
                           0000CD   170 _TH2	=	0x00cd
                                    171 ;--------------------------------------------------------
                                    172 ; special function bits
                                    173 ;--------------------------------------------------------
                                    174 	.area RSEG    (ABS,DATA)
      000000                        175 	.org 0x0000
                           000080   176 _P0_0	=	0x0080
                           000081   177 _P0_1	=	0x0081
                           000082   178 _P0_2	=	0x0082
                           000083   179 _P0_3	=	0x0083
                           000084   180 _P0_4	=	0x0084
                           000085   181 _P0_5	=	0x0085
                           000086   182 _P0_6	=	0x0086
                           000087   183 _P0_7	=	0x0087
                           000088   184 _IT0	=	0x0088
                           000089   185 _IE0	=	0x0089
                           00008A   186 _IT1	=	0x008a
                           00008B   187 _IE1	=	0x008b
                           00008C   188 _TR0	=	0x008c
                           00008D   189 _TF0	=	0x008d
                           00008E   190 _TR1	=	0x008e
                           00008F   191 _TF1	=	0x008f
                           000090   192 _P1_0	=	0x0090
                           000091   193 _P1_1	=	0x0091
                           000092   194 _P1_2	=	0x0092
                           000093   195 _P1_3	=	0x0093
                           000094   196 _P1_4	=	0x0094
                           000095   197 _P1_5	=	0x0095
                           000096   198 _P1_6	=	0x0096
                           000097   199 _P1_7	=	0x0097
                           000098   200 _RI	=	0x0098
                           000099   201 _TI	=	0x0099
                           00009A   202 _RB8	=	0x009a
                           00009B   203 _TB8	=	0x009b
                           00009C   204 _REN	=	0x009c
                           00009D   205 _SM2	=	0x009d
                           00009E   206 _SM1	=	0x009e
                           00009F   207 _SM0	=	0x009f
                           0000A0   208 _P2_0	=	0x00a0
                           0000A1   209 _P2_1	=	0x00a1
                           0000A2   210 _P2_2	=	0x00a2
                           0000A3   211 _P2_3	=	0x00a3
                           0000A4   212 _P2_4	=	0x00a4
                           0000A5   213 _P2_5	=	0x00a5
                           0000A6   214 _P2_6	=	0x00a6
                           0000A7   215 _P2_7	=	0x00a7
                           0000A8   216 _EX0	=	0x00a8
                           0000A9   217 _ET0	=	0x00a9
                           0000AA   218 _EX1	=	0x00aa
                           0000AB   219 _ET1	=	0x00ab
                           0000AC   220 _ES	=	0x00ac
                           0000AF   221 _EA	=	0x00af
                           0000B0   222 _P3_0	=	0x00b0
                           0000B1   223 _P3_1	=	0x00b1
                           0000B2   224 _P3_2	=	0x00b2
                           0000B3   225 _P3_3	=	0x00b3
                           0000B4   226 _P3_4	=	0x00b4
                           0000B5   227 _P3_5	=	0x00b5
                           0000B6   228 _P3_6	=	0x00b6
                           0000B7   229 _P3_7	=	0x00b7
                           0000B0   230 _RXD	=	0x00b0
                           0000B1   231 _TXD	=	0x00b1
                           0000B2   232 _INT0	=	0x00b2
                           0000B3   233 _INT1	=	0x00b3
                           0000B4   234 _T0	=	0x00b4
                           0000B5   235 _T1	=	0x00b5
                           0000B6   236 _WR	=	0x00b6
                           0000B7   237 _RD	=	0x00b7
                           0000B8   238 _PX0	=	0x00b8
                           0000B9   239 _PT0	=	0x00b9
                           0000BA   240 _PX1	=	0x00ba
                           0000BB   241 _PT1	=	0x00bb
                           0000BC   242 _PS	=	0x00bc
                           0000D0   243 _P	=	0x00d0
                           0000D1   244 _F1	=	0x00d1
                           0000D2   245 _OV	=	0x00d2
                           0000D3   246 _RS0	=	0x00d3
                           0000D4   247 _RS1	=	0x00d4
                           0000D5   248 _F0	=	0x00d5
                           0000D6   249 _AC	=	0x00d6
                           0000D7   250 _CY	=	0x00d7
                           0000AD   251 _ET2	=	0x00ad
                           0000BD   252 _PT2	=	0x00bd
                           0000C8   253 _T2CON_0	=	0x00c8
                           0000C9   254 _T2CON_1	=	0x00c9
                           0000CA   255 _T2CON_2	=	0x00ca
                           0000CB   256 _T2CON_3	=	0x00cb
                           0000CC   257 _T2CON_4	=	0x00cc
                           0000CD   258 _T2CON_5	=	0x00cd
                           0000CE   259 _T2CON_6	=	0x00ce
                           0000CF   260 _T2CON_7	=	0x00cf
                           0000C8   261 _CP_RL2	=	0x00c8
                           0000C9   262 _C_T2	=	0x00c9
                           0000CA   263 _TR2	=	0x00ca
                           0000CB   264 _EXEN2	=	0x00cb
                           0000CC   265 _TCLK	=	0x00cc
                           0000CD   266 _RCLK	=	0x00cd
                           0000CE   267 _EXF2	=	0x00ce
                           0000CF   268 _TF2	=	0x00cf
                                    269 ;--------------------------------------------------------
                                    270 ; overlayable register banks
                                    271 ;--------------------------------------------------------
                                    272 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        273 	.ds 8
                                    274 ;--------------------------------------------------------
                                    275 ; internal ram data
                                    276 ;--------------------------------------------------------
                                    277 	.area DSEG    (DATA)
      000008                        278 _LCD_GotoXY_PARM_2:
      000008                        279 	.ds 1
                                    280 ;--------------------------------------------------------
                                    281 ; overlayable items in internal ram
                                    282 ;--------------------------------------------------------
                                    283 	.area	OSEG    (OVR,DATA)
                                    284 	.area	OSEG    (OVR,DATA)
                                    285 ;--------------------------------------------------------
                                    286 ; indirectly addressable internal ram data
                                    287 ;--------------------------------------------------------
                                    288 	.area ISEG    (DATA)
                                    289 ;--------------------------------------------------------
                                    290 ; absolute internal ram data
                                    291 ;--------------------------------------------------------
                                    292 	.area IABS    (ABS,DATA)
                                    293 	.area IABS    (ABS,DATA)
                                    294 ;--------------------------------------------------------
                                    295 ; bit data
                                    296 ;--------------------------------------------------------
                                    297 	.area BSEG    (BIT)
                                    298 ;--------------------------------------------------------
                                    299 ; paged external ram data
                                    300 ;--------------------------------------------------------
                                    301 	.area PSEG    (PAG,XDATA)
                                    302 ;--------------------------------------------------------
                                    303 ; external ram data
                                    304 ;--------------------------------------------------------
                                    305 	.area XSEG    (XDATA)
                                    306 ;--------------------------------------------------------
                                    307 ; absolute external ram data
                                    308 ;--------------------------------------------------------
                                    309 	.area XABS    (ABS,XDATA)
                                    310 ;--------------------------------------------------------
                                    311 ; external initialized ram data
                                    312 ;--------------------------------------------------------
                                    313 	.area XISEG   (XDATA)
                                    314 	.area HOME    (CODE)
                                    315 	.area GSINIT0 (CODE)
                                    316 	.area GSINIT1 (CODE)
                                    317 	.area GSINIT2 (CODE)
                                    318 	.area GSINIT3 (CODE)
                                    319 	.area GSINIT4 (CODE)
                                    320 	.area GSINIT5 (CODE)
                                    321 	.area GSINIT  (CODE)
                                    322 	.area GSFINAL (CODE)
                                    323 	.area CSEG    (CODE)
                                    324 ;--------------------------------------------------------
                                    325 ; global & static initialisations
                                    326 ;--------------------------------------------------------
                                    327 	.area HOME    (CODE)
                                    328 	.area GSINIT  (CODE)
                                    329 	.area GSFINAL (CODE)
                                    330 	.area GSINIT  (CODE)
                                    331 ;--------------------------------------------------------
                                    332 ; Home
                                    333 ;--------------------------------------------------------
                                    334 	.area HOME    (CODE)
                                    335 	.area HOME    (CODE)
                                    336 ;--------------------------------------------------------
                                    337 ; code
                                    338 ;--------------------------------------------------------
                                    339 	.area CSEG    (CODE)
                                    340 ;------------------------------------------------------------
                                    341 ;Allocation info for local variables in function 'LCD_Send_Command'
                                    342 ;------------------------------------------------------------
                                    343 ;x                         Allocated to registers 
                                    344 ;------------------------------------------------------------
                                    345 ;	lcd1602.c:6: void LCD_Send_Command(unsigned char x)
                                    346 ;	-----------------------------------------
                                    347 ;	 function LCD_Send_Command
                                    348 ;	-----------------------------------------
      000164                        349 _LCD_Send_Command:
                           000007   350 	ar7 = 0x07
                           000006   351 	ar6 = 0x06
                           000005   352 	ar5 = 0x05
                           000004   353 	ar4 = 0x04
                           000003   354 	ar3 = 0x03
                           000002   355 	ar2 = 0x02
                           000001   356 	ar1 = 0x01
                           000000   357 	ar0 = 0x00
      000164 85 82 80         [24]  358 	mov	_P0,dpl
                                    359 ;	lcd1602.c:9: LCD_RS=0; //Chon thanh ghi lenh
                                    360 ;	assignBit
      000167 C2 A6            [12]  361 	clr	_P2_6
                                    362 ;	lcd1602.c:10: LCD_RW=0; //De ghi du lieu
                                    363 ;	assignBit
      000169 C2 A5            [12]  364 	clr	_P2_5
                                    365 ;	lcd1602.c:11: LCD_EN=1;
                                    366 ;	assignBit
      00016B D2 A7            [12]  367 	setb	_P2_7
                                    368 ;	lcd1602.c:12: Delay_us(100);
      00016D 90 00 64         [24]  369 	mov	dptr,#0x0064
      000170 12 02 50         [24]  370 	lcall	_Delay_us
                                    371 ;	lcd1602.c:13: LCD_EN=0;
                                    372 ;	assignBit
      000173 C2 A7            [12]  373 	clr	_P2_7
                                    374 ;	lcd1602.c:14: Wait_For_LCD(); //Doi cho LCD san sang
      000175 12 01 7B         [24]  375 	lcall	_Wait_For_LCD
                                    376 ;	lcd1602.c:15: LCD_EN=1;
                                    377 ;	assignBit
      000178 D2 A7            [12]  378 	setb	_P2_7
                                    379 ;	lcd1602.c:16: }
      00017A 22               [24]  380 	ret
                                    381 ;------------------------------------------------------------
                                    382 ;Allocation info for local variables in function 'Wait_For_LCD'
                                    383 ;------------------------------------------------------------
                                    384 ;	lcd1602.c:18: void Wait_For_LCD()
                                    385 ;	-----------------------------------------
                                    386 ;	 function Wait_For_LCD
                                    387 ;	-----------------------------------------
      00017B                        388 _Wait_For_LCD:
                                    389 ;	lcd1602.c:20: Delay_us(100);
      00017B 90 00 64         [24]  390 	mov	dptr,#0x0064
                                    391 ;	lcd1602.c:21: }
      00017E 02 02 50         [24]  392 	ljmp	_Delay_us
                                    393 ;------------------------------------------------------------
                                    394 ;Allocation info for local variables in function 'LCD_init'
                                    395 ;------------------------------------------------------------
                                    396 ;	lcd1602.c:22: void LCD_init()
                                    397 ;	-----------------------------------------
                                    398 ;	 function LCD_init
                                    399 ;	-----------------------------------------
      000181                        400 _LCD_init:
                                    401 ;	lcd1602.c:24: LCD_Send_Command(0x38); //Chon che do 8 bit, 2 hang cho LCD
      000181 75 82 38         [24]  402 	mov	dpl,#0x38
      000184 12 01 64         [24]  403 	lcall	_LCD_Send_Command
                                    404 ;	lcd1602.c:25: LCD_Send_Command(0x0E); //Bat hien thi, nhap nhay con tro
      000187 75 82 0E         [24]  405 	mov	dpl,#0x0e
      00018A 12 01 64         [24]  406 	lcall	_LCD_Send_Command
                                    407 ;	lcd1602.c:26: LCD_Send_Command(0x01); //Xoa man hinh
      00018D 75 82 01         [24]  408 	mov	dpl,#0x01
      000190 12 01 64         [24]  409 	lcall	_LCD_Send_Command
                                    410 ;	lcd1602.c:27: LCD_Send_Command(0x80); //Ve dau dong
      000193 75 82 80         [24]  411 	mov	dpl,#0x80
                                    412 ;	lcd1602.c:28: }
      000196 02 01 64         [24]  413 	ljmp	_LCD_Send_Command
                                    414 ;------------------------------------------------------------
                                    415 ;Allocation info for local variables in function 'LCD_Write_One_Char'
                                    416 ;------------------------------------------------------------
                                    417 ;c                         Allocated to registers 
                                    418 ;------------------------------------------------------------
                                    419 ;	lcd1602.c:31: void LCD_Write_One_Char(unsigned char c)
                                    420 ;	-----------------------------------------
                                    421 ;	 function LCD_Write_One_Char
                                    422 ;	-----------------------------------------
      000199                        423 _LCD_Write_One_Char:
      000199 85 82 80         [24]  424 	mov	_P0,dpl
                                    425 ;	lcd1602.c:34: LCD_RS=1; //Chon thanh ghi du lieu
                                    426 ;	assignBit
      00019C D2 A6            [12]  427 	setb	_P2_6
                                    428 ;	lcd1602.c:35: LCD_RW=0;
                                    429 ;	assignBit
      00019E C2 A5            [12]  430 	clr	_P2_5
                                    431 ;	lcd1602.c:36: LCD_EN=1;
                                    432 ;	assignBit
      0001A0 D2 A7            [12]  433 	setb	_P2_7
                                    434 ;	lcd1602.c:37: Delay_us(10);
      0001A2 90 00 0A         [24]  435 	mov	dptr,#0x000a
      0001A5 12 02 50         [24]  436 	lcall	_Delay_us
                                    437 ;	lcd1602.c:38: LCD_EN=0;
                                    438 ;	assignBit
      0001A8 C2 A7            [12]  439 	clr	_P2_7
                                    440 ;	lcd1602.c:39: Wait_For_LCD();
      0001AA 12 01 7B         [24]  441 	lcall	_Wait_For_LCD
                                    442 ;	lcd1602.c:40: LCD_EN=1;
                                    443 ;	assignBit
      0001AD D2 A7            [12]  444 	setb	_P2_7
                                    445 ;	lcd1602.c:41: }
      0001AF 22               [24]  446 	ret
                                    447 ;------------------------------------------------------------
                                    448 ;Allocation info for local variables in function 'LCD_Write_String'
                                    449 ;------------------------------------------------------------
                                    450 ;s                         Allocated to registers r5 r6 r7 
                                    451 ;length                    Allocated to registers 
                                    452 ;------------------------------------------------------------
                                    453 ;	lcd1602.c:43: void LCD_Write_String(unsigned char *s)
                                    454 ;	-----------------------------------------
                                    455 ;	 function LCD_Write_String
                                    456 ;	-----------------------------------------
      0001B0                        457 _LCD_Write_String:
                                    458 ;	lcd1602.c:46: length=strlen(s); //Lay do dai xau
      0001B0 AD 82            [24]  459 	mov	r5,dpl
      0001B2 AE 83            [24]  460 	mov	r6,dph
      0001B4 AF F0            [24]  461 	mov	r7,b
      0001B6 C0 07            [24]  462 	push	ar7
      0001B8 C0 06            [24]  463 	push	ar6
      0001BA C0 05            [24]  464 	push	ar5
      0001BC 12 04 9C         [24]  465 	lcall	_strlen
      0001BF AB 82            [24]  466 	mov	r3,dpl
      0001C1 AC 83            [24]  467 	mov	r4,dph
      0001C3 D0 05            [24]  468 	pop	ar5
      0001C5 D0 06            [24]  469 	pop	ar6
      0001C7 D0 07            [24]  470 	pop	ar7
                                    471 ;	lcd1602.c:47: while(length!=0)
      0001C9                        472 00101$:
      0001C9 EB               [12]  473 	mov	a,r3
      0001CA 60 27            [24]  474 	jz	00104$
                                    475 ;	lcd1602.c:49: LCD_Write_One_Char(*s); //Ghi ra LCD gia tri duoc tro boi con tro
      0001CC 8D 82            [24]  476 	mov	dpl,r5
      0001CE 8E 83            [24]  477 	mov	dph,r6
      0001D0 8F F0            [24]  478 	mov	b,r7
      0001D2 12 04 B4         [24]  479 	lcall	__gptrget
      0001D5 FC               [12]  480 	mov	r4,a
      0001D6 A3               [24]  481 	inc	dptr
      0001D7 AD 82            [24]  482 	mov	r5,dpl
      0001D9 AE 83            [24]  483 	mov	r6,dph
      0001DB 8C 82            [24]  484 	mov	dpl,r4
      0001DD C0 07            [24]  485 	push	ar7
      0001DF C0 06            [24]  486 	push	ar6
      0001E1 C0 05            [24]  487 	push	ar5
      0001E3 C0 03            [24]  488 	push	ar3
      0001E5 12 01 99         [24]  489 	lcall	_LCD_Write_One_Char
      0001E8 D0 03            [24]  490 	pop	ar3
      0001EA D0 05            [24]  491 	pop	ar5
      0001EC D0 06            [24]  492 	pop	ar6
      0001EE D0 07            [24]  493 	pop	ar7
                                    494 ;	lcd1602.c:50: s++; //Tang con tro
                                    495 ;	lcd1602.c:51: length--;
      0001F0 1B               [12]  496 	dec	r3
      0001F1 80 D6            [24]  497 	sjmp	00101$
      0001F3                        498 00104$:
                                    499 ;	lcd1602.c:53: }
      0001F3 22               [24]  500 	ret
                                    501 ;------------------------------------------------------------
                                    502 ;Allocation info for local variables in function 'LCD_GotoXY'
                                    503 ;------------------------------------------------------------
                                    504 ;col                       Allocated with name '_LCD_GotoXY_PARM_2'
                                    505 ;row                       Allocated to registers r7 
                                    506 ;i                         Allocated to registers r7 
                                    507 ;------------------------------------------------------------
                                    508 ;	lcd1602.c:55: void LCD_GotoXY(char row, char col)
                                    509 ;	-----------------------------------------
                                    510 ;	 function LCD_GotoXY
                                    511 ;	-----------------------------------------
      0001F4                        512 _LCD_GotoXY:
      0001F4 AF 82            [24]  513 	mov	r7,dpl
                                    514 ;	lcd1602.c:58: if (row == 2)
      0001F6 BF 02 08         [24]  515 	cjne	r7,#0x02,00102$
                                    516 ;	lcd1602.c:59: LCD_Send_Command(0xC0);      //cursor to fist col in row 2
      0001F9 75 82 C0         [24]  517 	mov	dpl,#0xc0
      0001FC 12 01 64         [24]  518 	lcall	_LCD_Send_Command
      0001FF 80 06            [24]  519 	sjmp	00112$
      000201                        520 00102$:
                                    521 ;	lcd1602.c:61: LCD_Send_Command(0x80);      //cursor to fist col in row 1 (default)
      000201 75 82 80         [24]  522 	mov	dpl,#0x80
      000204 12 01 64         [24]  523 	lcall	_LCD_Send_Command
                                    524 ;	lcd1602.c:62: for (i = 0; i < col; i++)
      000207                        525 00112$:
      000207 7F 00            [12]  526 	mov	r7,#0x00
      000209                        527 00106$:
      000209 C3               [12]  528 	clr	c
      00020A EF               [12]  529 	mov	a,r7
      00020B 95 08            [12]  530 	subb	a,_LCD_GotoXY_PARM_2
      00020D 50 0D            [24]  531 	jnc	00108$
                                    532 ;	lcd1602.c:63: LCD_Send_Command(0x14);      //cursor to fist col in row 1 (default)
      00020F 75 82 14         [24]  533 	mov	dpl,#0x14
      000212 C0 07            [24]  534 	push	ar7
      000214 12 01 64         [24]  535 	lcall	_LCD_Send_Command
      000217 D0 07            [24]  536 	pop	ar7
                                    537 ;	lcd1602.c:62: for (i = 0; i < col; i++)
      000219 0F               [12]  538 	inc	r7
      00021A 80 ED            [24]  539 	sjmp	00106$
      00021C                        540 00108$:
                                    541 ;	lcd1602.c:64: }
      00021C 22               [24]  542 	ret
                                    543 ;------------------------------------------------------------
                                    544 ;Allocation info for local variables in function 'Delay_ms'
                                    545 ;------------------------------------------------------------
                                    546 ;interval                  Allocated to registers r6 r7 
                                    547 ;i                         Allocated to registers r4 r5 
                                    548 ;j                         Allocated to registers r2 r3 
                                    549 ;------------------------------------------------------------
                                    550 ;	lcd1602.c:66: void Delay_ms(int interval)
                                    551 ;	-----------------------------------------
                                    552 ;	 function Delay_ms
                                    553 ;	-----------------------------------------
      00021D                        554 _Delay_ms:
      00021D AE 82            [24]  555 	mov	r6,dpl
      00021F AF 83            [24]  556 	mov	r7,dph
                                    557 ;	lcd1602.c:69: for(i=0;i<1000;i++)
      000221 7C 00            [12]  558 	mov	r4,#0x00
      000223 7D 00            [12]  559 	mov	r5,#0x00
                                    560 ;	lcd1602.c:71: for(j=0;j<interval;j++);
      000225                        561 00111$:
      000225 7A 00            [12]  562 	mov	r2,#0x00
      000227 7B 00            [12]  563 	mov	r3,#0x00
      000229                        564 00104$:
      000229 C3               [12]  565 	clr	c
      00022A EA               [12]  566 	mov	a,r2
      00022B 9E               [12]  567 	subb	a,r6
      00022C EB               [12]  568 	mov	a,r3
      00022D 64 80            [12]  569 	xrl	a,#0x80
      00022F 8F F0            [24]  570 	mov	b,r7
      000231 63 F0 80         [24]  571 	xrl	b,#0x80
      000234 95 F0            [12]  572 	subb	a,b
      000236 50 07            [24]  573 	jnc	00107$
      000238 0A               [12]  574 	inc	r2
      000239 BA 00 ED         [24]  575 	cjne	r2,#0x00,00104$
      00023C 0B               [12]  576 	inc	r3
      00023D 80 EA            [24]  577 	sjmp	00104$
      00023F                        578 00107$:
                                    579 ;	lcd1602.c:69: for(i=0;i<1000;i++)
      00023F 0C               [12]  580 	inc	r4
      000240 BC 00 01         [24]  581 	cjne	r4,#0x00,00126$
      000243 0D               [12]  582 	inc	r5
      000244                        583 00126$:
      000244 C3               [12]  584 	clr	c
      000245 EC               [12]  585 	mov	a,r4
      000246 94 E8            [12]  586 	subb	a,#0xe8
      000248 ED               [12]  587 	mov	a,r5
      000249 64 80            [12]  588 	xrl	a,#0x80
      00024B 94 83            [12]  589 	subb	a,#0x83
      00024D 40 D6            [24]  590 	jc	00111$
                                    591 ;	lcd1602.c:73: }
      00024F 22               [24]  592 	ret
                                    593 ;------------------------------------------------------------
                                    594 ;Allocation info for local variables in function 'Delay_us'
                                    595 ;------------------------------------------------------------
                                    596 ;interval                  Allocated to registers r6 r7 
                                    597 ;j                         Allocated to registers r4 r5 
                                    598 ;------------------------------------------------------------
                                    599 ;	lcd1602.c:75: void Delay_us(int interval)
                                    600 ;	-----------------------------------------
                                    601 ;	 function Delay_us
                                    602 ;	-----------------------------------------
      000250                        603 _Delay_us:
      000250 AE 82            [24]  604 	mov	r6,dpl
      000252 AF 83            [24]  605 	mov	r7,dph
                                    606 ;	lcd1602.c:78: for(j=0;j<interval;j++);
      000254 7C 00            [12]  607 	mov	r4,#0x00
      000256 7D 00            [12]  608 	mov	r5,#0x00
      000258                        609 00103$:
      000258 C3               [12]  610 	clr	c
      000259 EC               [12]  611 	mov	a,r4
      00025A 9E               [12]  612 	subb	a,r6
      00025B ED               [12]  613 	mov	a,r5
      00025C 64 80            [12]  614 	xrl	a,#0x80
      00025E 8F F0            [24]  615 	mov	b,r7
      000260 63 F0 80         [24]  616 	xrl	b,#0x80
      000263 95 F0            [12]  617 	subb	a,b
      000265 50 07            [24]  618 	jnc	00105$
      000267 0C               [12]  619 	inc	r4
      000268 BC 00 ED         [24]  620 	cjne	r4,#0x00,00103$
      00026B 0D               [12]  621 	inc	r5
      00026C 80 EA            [24]  622 	sjmp	00103$
      00026E                        623 00105$:
                                    624 ;	lcd1602.c:79: }
      00026E 22               [24]  625 	ret
                                    626 	.area CSEG    (CODE)
                                    627 	.area CONST   (CODE)
                                    628 	.area XINIT   (CODE)
                                    629 	.area CABS    (ABS,CODE)
